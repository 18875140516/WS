Tue, 02 Mar 2021 02:53:11 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 02:53:11 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 139, in _get_response
    "returned None instead." % (callback.__module__, view_name)
ValueError: The view examples.urls.areaHandle didn't return an HttpResponse object. It returned None instead.
Tue, 02 Mar 2021 02:53:49 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 02:54:17 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 02:54:17 urls.py[line:651] INFO POST
Tue, 02 Mar 2021 02:54:17 urls.py[line:657] INFO get_image
Tue, 02 Mar 2021 02:54:17 urls.py[line:668] INFO encoded = {"flag": "return_img", "topic": "hello"}
Tue, 02 Mar 2021 02:54:32 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 02:54:32 urls.py[line:651] INFO POST
Tue, 02 Mar 2021 02:54:32 urls.py[line:657] INFO get_image
Tue, 02 Mar 2021 02:54:32 urls.py[line:668] INFO encoded = {"flag": "return_img", "topic": "hello"}
Tue, 02 Mar 2021 02:54:40 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 02:54:40 urls.py[line:651] INFO POST
Tue, 02 Mar 2021 02:54:40 urls.py[line:657] INFO get_image
Tue, 02 Mar 2021 02:54:40 urls.py[line:668] INFO encoded = {"flag": "return_img", "topic": "hello", "img": ""}
Tue, 02 Mar 2021 02:54:55 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 02:54:55 urls.py[line:651] INFO POST
Tue, 02 Mar 2021 02:54:55 urls.py[line:657] INFO send_area
Tue, 02 Mar 2021 02:55:24 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 02:55:24 urls.py[line:651] INFO POST
Tue, 02 Mar 2021 02:55:24 urls.py[line:657] INFO send_area
Tue, 02 Mar 2021 20:40:58 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 20:40:58 urls.py[line:651] INFO GET
Tue, 02 Mar 2021 20:40:58 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/code/examples/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Tue, 02 Mar 2021 20:41:40 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 20:41:40 urls.py[line:651] INFO GET
Tue, 02 Mar 2021 20:41:40 urls.py[line:657] INFO get_image
Tue, 02 Mar 2021 20:41:40 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/code/examples/examples/urls.py", line 663, in areaHandle
    img_str = base64.b64encode(cv2.imencode('.jpg', img)[1]).decode()
cv2.error: OpenCV(4.5.1) /tmp/pip-req-build-1syr35c1/opencv/modules/imgcodecs/src/loadsave.cpp:934: error: (-215:Assertion failed) !image.empty() in function 'imencode'

Tue, 02 Mar 2021 20:46:53 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 20:46:53 urls.py[line:651] INFO GET
Tue, 02 Mar 2021 20:46:53 urls.py[line:657] INFO get_image
Tue, 02 Mar 2021 20:46:53 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/code/examples/examples/urls.py", line 663, in areaHandle
    img_str = base64.b64encode(cv2.imencode('.jpg', img)[1]).decode()
cv2.error: OpenCV(4.5.1) /tmp/pip-req-build-1syr35c1/opencv/modules/imgcodecs/src/loadsave.cpp:934: error: (-215:Assertion failed) !image.empty() in function 'imencode'

Tue, 02 Mar 2021 20:47:12 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 20:47:12 urls.py[line:651] INFO GET
Tue, 02 Mar 2021 20:47:12 urls.py[line:657] INFO get_image
Tue, 02 Mar 2021 20:47:12 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/django/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/code/examples/examples/urls.py", line 663, in areaHandle
    img_str = base64.b64encode(cv2.imencode('.jpg', img)[1]).decode()
cv2.error: OpenCV(4.5.1) /tmp/pip-req-build-1syr35c1/opencv/modules/imgcodecs/src/loadsave.cpp:934: error: (-215:Assertion failed) !image.empty() in function 'imencode'

Tue, 02 Mar 2021 20:47:41 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 20:47:41 urls.py[line:651] INFO GET
Tue, 02 Mar 2021 20:47:41 urls.py[line:657] INFO get_image
Tue, 02 Mar 2021 20:47:41 urls.py[line:666] INFO encoded = {"flag": "return_img", "topic": "test", "img": "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"}
Tue, 02 Mar 2021 21:01:04 urls.py[line:649] INFO areaHandle request
Tue, 02 Mar 2021 21:01:04 urls.py[line:651] INFO GET
Tue, 02 Mar 2021 21:01:04 urls.py[line:657] INFO send_area
Wed, 03 Mar 2021 20:03:03 urls.py[line:649] INFO areaHandle request
Wed, 03 Mar 2021 20:03:03 urls.py[line:651] INFO GET
Wed, 03 Mar 2021 20:03:03 urls.py[line:657] INFO send_area
Wed, 03 Mar 2021 20:03:11 urls.py[line:649] INFO areaHandle request
Wed, 03 Mar 2021 20:03:11 urls.py[line:651] INFO GET
Wed, 03 Mar 2021 20:03:11 urls.py[line:657] INFO send_area
Thu, 04 Mar 2021 20:27:21 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:21 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:21 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:23 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:23 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:23 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:31 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:31 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:31 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:33 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:33 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:33 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:35 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:35 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:35 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:37 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:37 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:37 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:39 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:39 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:39 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:41 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:41 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:41 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:44 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:44 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:44 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:47 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:47 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:47 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:49 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:49 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:49 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:51 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:51 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:51 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:54 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:54 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:54 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:56 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:56 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:56 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:27:58 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:27:58 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:27:58 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:01 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:01 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:01 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:03 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:03 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:03 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:05 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:05 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:05 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:08 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:08 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:08 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:10 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:10 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:10 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:13 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:13 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:13 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:17 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:17 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:17 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:19 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:19 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:19 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:21 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:21 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:21 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:23 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:23 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:23 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:25 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:25 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:25 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:27 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:27 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:27 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:29 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:29 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:29 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:31 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:31 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:31 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:33 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:33 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:33 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:36 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:36 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:36 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:38 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:38 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:38 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:40 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:40 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:40 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:42 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:42 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:42 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:44 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:44 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:44 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:46 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:46 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:46 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:48 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:48 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:48 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:50 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:50 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:50 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:52 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:52 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:52 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:54 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:54 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:54 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:56 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:56 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:56 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:28:58 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:28:58 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:28:58 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:00 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:00 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:00 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:02 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:02 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:02 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:04 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:04 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:04 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:06 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:06 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:06 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:08 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:08 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:08 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:10 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:10 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:10 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:12 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:12 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:12 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:14 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:14 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:14 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:16 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:16 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:16 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:18 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:18 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:18 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:20 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:20 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:20 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:22 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:22 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:22 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:24 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:24 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:24 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:26 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:26 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:26 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:28 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:28 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:28 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:30 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:30 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:30 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:32 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:32 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:32 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:34 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:34 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:34 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:36 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:36 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:36 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:38 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:38 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:38 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:40 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:40 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:40 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:42 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:42 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:42 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:44 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:44 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:44 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:46 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:46 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:46 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:48 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:48 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:48 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:50 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:50 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:50 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:52 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:52 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:52 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:54 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:54 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:54 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:56 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:56 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:56 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:29:58 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:29:58 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:29:58 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:00 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:00 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:00 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:02 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:02 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:02 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:04 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:04 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:04 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:06 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:06 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:06 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:08 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:08 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:08 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:10 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:10 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:10 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:12 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:12 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:12 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:14 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:14 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:14 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:16 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:16 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:16 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:18 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:18 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:18 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:20 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:20 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:20 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:22 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:22 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:22 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:24 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:24 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:24 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:26 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:26 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:26 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:28 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:28 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:28 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:30 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:30 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:30 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:32 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:32 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:32 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:34 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:34 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:34 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:36 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:36 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:36 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:38 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:38 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:38 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:40 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:40 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:40 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:42 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:42 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:42 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:30:44 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:30:44 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:30:44 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 77, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'flag'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/tmp/exam/examples/urls.py", line 657, in areaHandle
    logging.info(msg['flag'])
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/utils/datastructures.py", line 79, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'flag'
Thu, 04 Mar 2021 20:35:25 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:25 urls.py[line:651] INFO GET
Thu, 04 Mar 2021 20:35:25 urls.py[line:657] INFO get_image
Thu, 04 Mar 2021 20:35:25 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 663, in areaHandle
    img_str = base64.b64encode(cv2.imencode('.jpg', img)[1]).decode()
cv2.error: OpenCV(4.1.0) /io/opencv/modules/imgcodecs/src/grfmt_base.cpp:145: error: (-10:Unknown error code -10) Raw image encoder error: Empty JPEG image (DNL not supported) in function 'throwOnEror'

Thu, 04 Mar 2021 20:35:31 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:31 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:31 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:33 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:33 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:33 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:35 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:35 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:35 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:37 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:37 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:37 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:39 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:39 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:39 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:41 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:41 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:41 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:43 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:43 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:43 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:45 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:45 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:45 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:47 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:47 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:47 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:49 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:49 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:49 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:51 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:51 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:51 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:53 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:53 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:53 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:55 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:55 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:55 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:57 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:57 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:57 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:35:59 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:35:59 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:35:59 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:01 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:01 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:01 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:03 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:03 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:03 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:05 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:05 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:05 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:07 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:07 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:07 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:09 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:09 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:09 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:11 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:11 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:11 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:13 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:13 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:13 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:15 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:15 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:15 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:17 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:17 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:17 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:19 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:19 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:19 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:21 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:21 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:21 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:23 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:23 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:23 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:25 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:25 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:25 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:27 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:27 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:27 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:29 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:29 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:29 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 653, in areaHandle
    msg = request.body()
TypeError: 'bytes' object is not callable
Thu, 04 Mar 2021 20:36:31 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:31 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:31 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:33 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:33 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:33 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:35 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:35 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:35 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:37 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:37 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:37 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:39 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:39 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:39 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:41 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:41 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:41 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:43 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:43 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:43 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:45 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:45 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:45 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:47 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:47 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:47 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:49 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:49 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:49 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:51 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:51 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:51 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:53 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:53 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:53 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:55 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:55 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:55 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:57 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:57 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:57 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:36:59 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:36:59 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:36:59 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:01 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:01 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:01 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:03 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:03 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:03 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:05 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:05 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:05 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:07 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:07 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:07 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:09 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:09 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:09 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:11 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:11 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:11 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:13 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:13 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:13 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:15 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:15 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:15 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:17 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:17 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:17 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:19 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:19 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:19 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:21 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:21 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:21 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:23 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:23 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:23 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:25 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:25 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:25 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:27 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:27 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:27 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:29 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:29 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:29 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:31 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:31 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:31 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:33 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:33 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:33 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:35 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:35 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:35 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:37 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:37 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:37 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:39 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:39 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:39 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:41 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:41 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:41 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:43 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:43 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:43 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:45 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:45 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:45 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:47 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:47 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:47 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:49 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:49 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:49 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:51 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:51 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:51 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:53 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:53 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:53 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:55 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:55 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:55 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:57 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:57 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:57 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:37:59 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:37:59 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:37:59 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:01 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:01 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:01 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:03 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:03 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:03 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:05 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:05 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:05 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:07 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:07 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:07 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:09 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:09 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:09 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:11 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:11 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:11 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:13 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:13 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:13 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:15 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:15 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:15 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:17 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:17 urls.py[line:651] INFO GET
Thu, 04 Mar 2021 20:38:17 urls.py[line:658] INFO get_image
Thu, 04 Mar 2021 20:38:17 exception.py[line:118] ERROR Internal Server Error: /areaHandle
Traceback (most recent call last):
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/exception.py", line 35, in inner
    response = get_response(request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 128, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/lyz/miniconda3/envs/py36gpu/lib/python3.6/site-packages/django/core/handlers/base.py", line 126, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/lyz/program/example/examples/urls.py", line 664, in areaHandle
    img_str = base64.b64encode(cv2.imencode('.jpg', img)[1]).decode()
cv2.error: OpenCV(4.1.0) /io/opencv/modules/imgcodecs/src/grfmt_base.cpp:145: error: (-10:Unknown error code -10) Raw image encoder error: Empty JPEG image (DNL not supported) in function 'throwOnEror'

Thu, 04 Mar 2021 20:38:17 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:17 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:17 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:19 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:19 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:19 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:21 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:21 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:21 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:23 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:23 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:23 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:25 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:25 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:25 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:27 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:27 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:27 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:29 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:29 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:29 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:31 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:31 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:31 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:33 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:33 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:33 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:35 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:35 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:35 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:38 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:38 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:38 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:40 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:40 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:40 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:42 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:42 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:42 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:44 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:44 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:44 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:46 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:46 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:46 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:48 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:48 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:48 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:50 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:50 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:50 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:52 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:52 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:52 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:54 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:54 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:54 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:56 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:56 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:56 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:38:57 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:57 urls.py[line:651] INFO GET
Thu, 04 Mar 2021 20:38:57 urls.py[line:658] INFO get_image
Thu, 04 Mar 2021 20:38:57 urls.py[line:667] INFO encoded = {"flag": "return_img", "topic": "ssda", "img": ""}
Thu, 04 Mar 2021 20:38:58 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:38:58 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:38:58 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:00 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:00 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:00 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:02 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:02 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:02 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:04 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:04 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:04 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:06 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:06 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:06 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:08 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:08 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:08 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:10 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:10 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:10 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:12 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:12 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:12 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:14 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:14 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:14 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:16 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:16 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:16 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:18 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:18 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:18 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:20 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:20 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:20 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:22 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:22 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:22 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:23 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:23 urls.py[line:651] INFO GET
Thu, 04 Mar 2021 20:39:23 urls.py[line:658] INFO get_image
Thu, 04 Mar 2021 20:39:24 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:24 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:24 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:26 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:26 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:26 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:28 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:28 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:28 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:30 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:30 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:30 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:32 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:32 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:32 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:34 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:34 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:34 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:36 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:36 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:36 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:38 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:38 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:38 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:40 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:40 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:40 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:42 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:42 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:42 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:44 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:44 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:44 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:46 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:46 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:46 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:48 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:48 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:48 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:50 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:50 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:50 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:52 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:52 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:52 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:54 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:54 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:54 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:56 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:56 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:56 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:39:58 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:39:58 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:39:58 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:00 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:00 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:00 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:00 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:00 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:00 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:02 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:02 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:02 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:04 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:04 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:04 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:06 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:06 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:06 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:08 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:08 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:08 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:10 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:10 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:10 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:12 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:12 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:12 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:14 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:14 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:14 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:16 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:16 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:16 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:18 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:18 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:18 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:20 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:20 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:20 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:22 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:22 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:22 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:24 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:24 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:24 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:26 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:26 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:26 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:28 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:28 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:28 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:30 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:30 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:30 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:32 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:32 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:32 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:34 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:34 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:34 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:36 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:36 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:36 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:38 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:38 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:38 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:40 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:40 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:40 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:42 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:42 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:42 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:44 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:44 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:44 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:46 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:46 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:46 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:48 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:48 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:48 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:50 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:50 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:50 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:52 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:52 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:52 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:54 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:54 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:54 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:56 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:56 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:56 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:58 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:40:58 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:40:58 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:40:58 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:40:58 urls.py[line:675] INFO size= [800, 600]
Thu, 04 Mar 2021 20:41:00 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:00 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:00 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:00 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:00 urls.py[line:675] INFO size= [800, 600]
Thu, 04 Mar 2021 20:41:02 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:02 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:02 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:02 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:02 urls.py[line:675] INFO size= [800, 600]
Thu, 04 Mar 2021 20:41:04 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:04 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:04 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:04 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:04 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:06 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:06 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:06 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:06 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:06 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:10 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:10 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:10 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:10 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:10 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:12 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:12 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:12 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:12 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:12 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:14 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:14 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:14 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:14 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:14 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:16 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:16 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:16 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:16 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:16 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:18 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:18 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:18 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:18 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:18 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:20 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:20 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:20 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:20 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:20 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:22 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:22 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:22 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:22 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:22 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:24 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:24 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:24 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:24 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:24 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:26 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:26 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:26 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:26 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:26 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:28 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:28 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:28 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:28 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:28 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:30 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:30 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:30 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:30 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:30 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:32 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:32 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:32 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:32 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:32 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:34 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:34 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:34 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:34 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:34 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:36 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:36 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:36 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:36 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:36 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:38 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:38 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:38 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:38 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:38 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:40 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:40 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:40 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:40 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:40 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:42 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:42 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:42 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:42 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:42 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:44 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:44 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:44 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:44 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:44 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:46 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:46 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:46 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:46 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:46 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:48 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:48 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:48 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:48 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:48 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:50 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:50 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:50 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:50 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:50 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:52 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:52 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:52 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:52 urls.py[line:674] INFO area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:52 urls.py[line:675] INFO size = [800, 600]
Thu, 04 Mar 2021 20:41:56 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:56 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:56 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:56 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:56 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:41:58 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:41:58 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:41:58 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:41:58 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:41:58 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:00 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:00 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:00 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:00 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:00 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:02 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:02 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:02 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:02 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:02 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:04 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:04 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:04 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:04 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:04 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:06 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:06 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:06 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:06 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:06 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:08 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:08 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:08 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:08 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:08 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:10 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:10 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:10 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:10 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:10 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:12 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:12 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:12 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:12 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:12 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:14 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:14 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:14 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:14 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:14 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:15 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:15 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:15 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:15 urls.py[line:674] INFO type = <class 'str'>area = [1,2]
Thu, 04 Mar 2021 20:42:15 urls.py[line:675] INFO type = <class 'str'>size = [1,2]
Thu, 04 Mar 2021 20:42:16 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:16 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:16 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:16 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:16 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:18 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:18 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:18 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:18 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:18 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:20 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:20 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:20 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:20 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:20 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:22 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:22 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:22 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:22 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:22 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:24 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:24 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:24 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:24 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:24 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:26 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:26 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:26 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:26 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:26 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:28 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:28 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:28 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:28 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:28 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:30 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:30 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:30 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:30 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:30 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:32 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:32 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:32 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:32 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:32 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:34 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:34 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:34 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:34 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:34 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:36 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:36 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:36 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:36 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:36 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:38 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:38 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:38 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:38 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:38 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:40 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:40 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:40 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:40 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:40 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:42 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:42 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:42 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:42 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:42 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:44 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:44 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:44 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:44 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:44 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:46 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:46 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:46 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:46 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:46 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:48 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:48 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:48 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:48 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:48 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:50 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:50 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:50 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:50 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:50 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:52 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:52 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:52 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:52 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:52 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:54 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:54 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:54 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:54 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:54 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:56 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:56 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:56 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:56 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:56 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:42:58 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:42:58 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:42:58 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:42:58 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:42:58 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:00 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:00 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:00 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:00 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:00 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:02 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:02 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:02 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:02 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:02 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:04 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:04 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:04 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:04 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:04 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:06 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:06 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:06 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:06 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:06 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:08 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:08 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:08 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:08 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:08 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:10 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:10 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:10 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:10 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:10 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:12 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:12 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:12 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:12 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:12 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:14 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:14 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:14 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:14 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:14 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:16 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:16 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:16 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:16 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:16 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:18 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:18 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:18 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:18 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:18 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:20 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:20 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:20 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:20 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:20 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:22 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:22 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:22 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:22 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:22 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:24 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:24 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:24 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:24 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:24 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:26 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:26 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:26 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:26 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:26 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
Thu, 04 Mar 2021 20:43:28 urls.py[line:649] INFO areaHandle request
Thu, 04 Mar 2021 20:43:28 urls.py[line:651] INFO POST
Thu, 04 Mar 2021 20:43:28 urls.py[line:658] INFO send_area
Thu, 04 Mar 2021 20:43:28 urls.py[line:674] INFO type = <class 'list'>area = [[163, 52], [640, 133], [293, 446], [163, 52]]
Thu, 04 Mar 2021 20:43:28 urls.py[line:675] INFO type = <class 'list'>size = [800, 600]
